services:
  mongodb:
    image: mongo:7.0.2
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${USER_MONGODB:?error}
      MONGO_INITDB_ROOT_PASSWORD: ${PWD_MONGODB:?error}    
    ports:
      - "27017:27017"  # Port MongoDB
    volumes:
        - ../../volumes/mongodb/db:/data/db
        - ../../volumes/mongodb/init:/docker-entrypoint-initdb.d
        - ../../volumes/mongodb/backup:/backup
    networks:
      - production-network
  
  mongo-express:
    image: mongo-express
    restart : always
    container_name: mongo-express
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${USER_MONGODB:?error}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${PWD_MONGODB:?error}
      ME_CONFIG_BASICAUTH : "false"
      # ME_CONFIG_BASICAUTH_USERNAME : ${USER_MONGODB:?error}
      # ME_CONFIG_BASICAUTH_PASSWORD : ${PWD_MONGODB:?error}
    labels:
      - traefik.http.routers.mongo-express.tls=true
      - traefik.http.routers.mongo-express.priority=479
    depends_on:
      - mongodb
    networks:
      - production-network

    # labels:
    #   - traefik.http.routers.mongo-express.rule= Host(`jacquenet.traefik.me`) && PathPrefix(`/mongoexpress`)
    #   - traefik.http.routers.mongo-express.tls=true
    #   - traefik.http.routers.mongo-express-tls.tls.domains[0].main=jacquenet.traefik.me

networks:
  production-network:
    name: production-network
    external: true