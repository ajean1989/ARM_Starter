needs: build
    runs-on: ubuntu-latest

    environment: my-env
    env:
      ARM_VPS1_API_KEY: ${{ secrets.ARM_VPS1_API_KEY }}
      PWD_MARIADB: ${{ secrets.PWD_MARIADB }}
      PWD_MONGODB: ${{ secrets.PWD_MONGODB }}
      SERVER_VPS1_IP: ${{ secrets.SERVER_VPS1_IP }}
      USER_MARIADB: ${{ secrets.USER_MARIADB }}
      USER_MONGODB: ${{ secrets.USER_MONGODB }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: cr√©ation de l'agent pour ne pas entrer la passphrase
      run: eval `ssh-agent` && echo "{{ secrets.SSH_PRIVATE_KEY_VPS1 }}" | ssh-add -

    - name: rm all active container
      run: ssh debian@${{ secrets.ARM_VPS1_API_KEY }} "docker rm -f $(docker ps -a -q)"

    - name: Copy mariadb files
      run: scp -r ./ARM_Starter/Mariadb debian@${{ secrets.ARM_VPS1_API_KEY }}:/home/debian/ARMarket/ARM_Starter/Mariadb/

    - name: Copy mongodb files
      run: scp -r ./ARM_Starter/Mongodb debian@${{ secrets.ARM_VPS1_API_KEY }}:/home/debian/ARMarket/ARM_Starter/Mongodb/

    - name: Copy traefik files
      run: scp -r ./ARM_Starter/Traefik debian@${{ secrets.ARM_VPS1_API_KEY }}:/home/debian/ARMarket/ARM_Starter/Traefik/

    - name: Copy autorun file
      run: scp ./ARM_Starter/run/run_build.sh debian@${{ secrets.ARM_VPS1_API_KEY }}:/home/debian/ARMarket/ARM_Starter/run_build.sh

    - name: run containers
      run: scp ./ARM_Starter/run/run_build.sh debian@${{ secrets.ARM_VPS1_API_KEY }}:/home/debian/ARMarket/ARM_Starter/run_build.sh

    - name: rm all active container
      run: ssh debian@${{ secrets.ARM_VPS1_API_KEY }} "bash ./ARMarket/ARM_Starter/run_build.sh"